# ------------------------------- 
# Partial reduplication 
# ------------------------------- 

define Vow [{a}|{aa}|{e}|{ii}|{i}|{o}]; 
define Diphthong [{ai}];
define Cons [{p}|{py}|{t}|{ty}|{k}|{ky}|{s}|{sh}|{ch}|{ts}|{tz}|{h}|{m}|{n}|{ny}|{r}|{ry}|{v}|{y}];

define Redup %< \[%<|%>]+ %> ;

define Lexicon [
  "[=amen+prtl.redup@b.copy.][VRoot][=to.see, to.look; to.look.for; to.look.after; to.take.care.of]::[= (ES: mirar.a_cada_rato)]": [{amen}] ! amemen
| "=apii": [{apii}] ! apiipii
| "=ashi": [{ashi}] ! ashishita
| "=atsik": [{atsik}] ! atsitsika
| "=chek": [{chek}] ! chechek
| "=kaim" : [{kaim}] ! kaikaim
| "=kimota" : [{kimota}] ! 
| "=kis" : [{kis}] ! kikis 
| "=ken" : [{ken}]
| "=kinkitsa" : [{kinkitsa}]
| "=koma": [{koma}]
| "=kov" : [{kov}]
| "=mairi" : [{mairi}]
| "=saik" : [{saik}]
| "=sankena" : [{sankena}]
| "=sampi" : [{sampi}]
| "=tasonk" : [{tasonk}]
| "=tsaanki" : [{tsaanki}]
];

define LexiconSemiManual [
  "amen": [{a}(Redup){men}]
| "apii": [{a}(Redup){pii}]
| "ashi": [{a}(Redup){shi}]
| "atsik": [{a}(Redup){tsik}]
| "chek": [(Redup){chek}]
| "kaim" : [(Redup){kaim}]
| "kimota" : [(Redup){kimota}]
| "ken" : [(Redup){ken}]
| "kinkitsa" : [(Redup){kinkitsa}]
| "koma": [(Redup){koma}]
| "kov" : [(Redup){kov}]
| "mairi" : [(Redup){mairi}]
| "saik" : [(Redup){saik}]
| "sankena" : [(Redup){sankena}]
| "sampi" : [(Redup){sampi}]
| "tasonk" : [(Redup){tasonk}]
| "tsaanki" : [(Redup){tsaanki}]
];

define LexiconManual [
  "amen": [{a}(Redup)%<{me}%>{n}]
| "apii": [{a}(Redup)%<{pii}%>]
| "ashi": [{a}(Redup)%<{shi}%>]
| "atsik": [{a}(Redup)%<{tsi}%>{k}]
| "chek": [(Redup)%<{che}%>{k}]
| "kaim" : [(Redup)%<{kai}%>{m}]
| "kimota" : [(Redup)%<{ki}%>{mota}]
| "ken" : [(Redup)%<{ke}%>{n}]
| "kinkitsa" : [(Redup)%<{ki}%>{nkitsa}]
| "koma": [(Redup)%<{ko}%>{ma}]
| "kov" : [(Redup)%<{ko}%>{v}]
| "mairi" : [(Redup)%<{mai}%>{ri}]
| "saik" : [(Redup)%<{sai}%>{k}]
| "sankena" : [(Redup)%<{sa}%>{nkena}]

| "sampi" : [(Redup)%<{sa}%>{mpi}]
| "tasonk" : [(Redup)%<{ta}%>{sonk}]
| "tsaanki" : [(Redup)%<{tsaa}%>{nki}]
];

define Rule2 [..] -> %< \[%<|%>]+ %> || .#. {a} _ %< ,, .#. _ %< ; 
define Rule1 [ Cons [Vow|Diphthong] ] -> %< ... %> || .#. _ Cons ,, .#. _ .#. ,, .#. {a} _ Cons ,, .#. {a} _ .#. ; 
define RemoveBrackets %<|%> -> 0;

define LLexicon Lexicon .o. Rule1 .o. Rule2 ; 
#define LLexicon Lexicon .o. MarkRedup; ! SemiManual
# define LLexicon Lexicon ; Manual
#define preRedup lexicon .o. Rule1 .o. MarkRedup; 
regex 0 <- %<|%> .o. _eq(LLexicon, %<, %>) .o. RemoveBrackets; 

