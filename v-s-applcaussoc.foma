# --------------------------------
# SOCIATIVE-CAUSATIVE APPLICATIVE 
# --------------------------------
# 1: Sociative causation 'CAUS.SOC' is a particular type of causation, where the causer not only
#    makes the causee do an action, but also participates in it. \cite{guillaume:sociative:10}
#    it is annotated as: +CHAR@CAUS.SOC. 

# ABBREVIATIONS
# APPL.CAUS.SOC sociative-causative applicative 

define V=S=CAUSSOC=SET1 [
# 2 MORPHOLOGICAL VALUES FOR DISAMBIGUATION:
# 0: A+(causer).causes.sth/sb(causee).to.do.sth.&.A+.also.participates.in.the.actn.
# 1: to.make.sth/sb.do.sth.
  "[--][-ak][+APPL.CAUS.SOC][=A+(causer).causes.sth/sb(causee).to.do.sth.&.A+.also.participates.in.the.actn.; to.make.sth/sb.do.sth.]" : "@EP"[{ak}]
!| "[--][-ag][+APPL.CAUS.SOC][=A+(causer).causes.sth/sb(causee).to.do.sth.&.A+.also.participates.in.the.actn.; to.make.sth/sb.do.sth.]" : "@EP"[{ag}] ! to be revised 
| "[--][-aka][+APPL.CAUS.SOC][=A+(causer).causes.sth/sb(causee).to.do.sth.&.A+.also.participates.in.the.actn.; to.make.sth/sb.do.sth.]" : "@EP"[{aka}]
| "[--][-akaa][+APPL.CAUS.SOC][=A+(causer).causes.sth/sb(causee).to.do.sth.&.A+.also.participates.in.the.actn.; to.make.sth/sb.do.sth.]" : "@EP"[{akaa}]
];

define V=S=CAUSSOC=SET2 [
  "[--][-akag][+APPL.CAUS.SOC][=A+(causer).causes.sth/sb(causee).to.do.sth.&.A+.also.participates.in.the.actn.; to.make.sth/sb.do.sth.]" : "@EP"[{akag}] ! to be revised 
];

# --------------------------------
# INDIRECT-CAUSATIVE APPLICATIVE 
# --------------------------------
# the indirect causative suffix -akant attached to the root heva 'to.lead' in the social term jeva-t-akant-tz-i-ro-ri EN: 'authorities', lit. 'the.ones.who.lead.by.indirectly.causing.it'
# it is often used to create abstract concepts or titles.
# tsibakantatsiri / tsivakantatsiri / =tsivak -ant -atsi -ri / =to.put.out -appl.reas -stat -rel / EN: 'fire_fighter'; ES: 'bombero'
# kantakantantsi EN: law; ES: ley
define V=S=APPLCAUSIND [
  "[--][-akant][+APPL.CAUS.IND]" : "@EP"[{akant}]
];

define CAUSSOC [ [EP V=S=CAUSSOC=SET1]|[V=S=CAUSSOC=SET1]|[EP V=S=APPLCAUSIND]|[V=S=APPLCAUSIND] ];


# ****************************************
                   
!define V=S=APPLSOC [
!  "[--][-ak][+APPL.SOC]" : "@EP"[{ak}]
!];
                   
# ****************************************
                   
!define V=S=CAUSCOM [
!  "[--][-aka][+CAUS.COM]" : "@EP"[{aka}]
!];
                   
# ****************************************
                   
!define V=S=CAUS [
!  "[--][-ak][+CAUS]" : "@EP"[{ak}]
!| "[--][-aka][+CAUS]" : "@EP"[{aka}]
!];
