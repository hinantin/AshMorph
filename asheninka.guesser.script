       #--------------------------------------------------------#
       # delete all tags and special chars in surface forms     #
       #--------------------------------------------------------#
       define Cleanup1  [["@EP"|"@EP@"|"@PHONPROC@"|"@PHONPROCCMPNOUN@"|"@PHONPROCINCNOUN@"|"@1SG@"|"@2@"|"@3m.@"|"@3n.m.@"|"@1PL@"|"@NPOSS"|"@AGTCAUS@"|"@MP@"|"@I@"|"@NI@"|"@NVowel@"|"@VPERS@"|"@NMZ@"|"@ALNPOSS@"|"@IDIM@"] -> ""];
       define Cleanup2 ["" <- ["@EP"|"@EP@"|"@PHONPROC@"|"@PHONPROCCMPNOUN@"|"@PHONPROCINCNOUN@"|"@1SG@"|"@2@"|"@3m.@"|"@3n.m.@"|"@1PL@"|"@NPOSS"|"@AGTCAUS@"|"@MP@"|"@I@"|"@NI@"|"@NVowel@"|"@VPERS@"|"@NMZ@"|"@ALNPOSS@"|"@IDIM@"]];
       define Cleanup [Cleanup2];

       define VowelRoot [a|e|i|o|á|é|í|ó|A|E|I|O|Á|É|Í|Ó];
       define ConsRoot [b|c|g|h|j|k|l|m|n|p|q|r|s|t|v|x|y|z|B|C|G|H|J|K|L|M|N|P|Q|R|S|T|V|X|Y|Z];

      source orthography.foma 

      ##########################
      #                        #
      #          Verbs         #
      #                        #
      ##########################
      source v-p-1.foma
      source v-p-2.foma

      define Pref [ [P=1 P=2] | [P=1] | [P=2=SET3] ] ;

      ##########################
      #                        #
      #   'Empty Morph' is a   #
      #   sort of epenthesis   #
      #                        #
      ##########################

      define TSEpenthesisRule1 [ t"@EP" (->) {ts}"@EP" || n _ i ];  # ts allophone to tz
                                                                 # n-amatawits-i-mi
      define TSEpenthesisRule2 [ t"@EP" (->) {ts}"@EP" || a _ i ];
	  
      define TZEpenthesisRule4 [ t"@EP" -> {tz}"@EP" , t"@EP" -> t"@EP" || n _ i ]; # kant@EPi -> ocantzi
      define TZEpenthesisRule6 [ t"@EP" (->) {tz}"@EP" || i _ i ]; # p^atziri(tz)-imo(t)~an-ac—e-ri
      define TZEpenthesisRule8 [ t"@EP" (->) {tz}"@EP" || o _ i ]; # i-tsink-ako-tz-imaint-a-ro
      
      define Epenthesis [ 
TSEpenthesisRule1 .o. TSEpenthesisRule2 .o. 
TZEpenthesisRule4 .o. 
TZEpenthesisRule6 .o. 
TZEpenthesisRule8 
];

      
      # abaemantero / avaemantero /  
      define VCausativeAgentiveRule1 [ v"@AGTCAUS@"k -> v"@AGTCAUS@", v"@AGTCAUS@"k -> v"@AGTCAUS@"k || [{o}] _ [{a}] ]; 
      define VCausativeAgentiveRule2 [ v"@AGTCAUS@"k -> v"@AGTCAUS@", v"@AGTCAUS@"k -> v"@AGTCAUS@"k || [{a}|{i}]"@VPERS@" _ [{a}] ]; 
	  # obionkaka / ovionkaka / acumular 
      define VCausativeAgentiveRule3 [ v"@AGTCAUS@"p -> v"@AGTCAUS@", v"@AGTCAUS@"p -> v"@AGTCAUS@"p || [{o}] _ [{i}] ]; 
      define CausativeAgentive [ VCausativeAgentiveRule1 .o. VCausativeAgentiveRule2 .o. VCausativeAgentiveRule3 ]; 
      
      define IrrealisMidVoiceEmpaRule1 [ e"@EP" (->) "@EP" || [{r}] _ [{empa}] ];  
      
      ##########################
      #                        #
      #        Transitive      #
      #                        #
      ##########################
      define PersPrnPI2Rule1 [ [{pi}]"@VPERS@" (->) "@2@" ];
      define PersPrnRules [ PersPrnPI2Rule1 ] ; 

      source verb.classifier.prq.foma
      source verb.composition.prq.foma
      source verb.composition.len.prq.foma
      source verb.suffix.prq.script
	  
      source verb.transitions.modalformative.script
      source verb.transitions.prq.script

      define Suff [S] ;

      ####################################
      #                                  #
      #   Subject / Agent ... Object     #
      #     Restricctions                #
      #                                  #
      ####################################

      define MPRestr1 [ ["@MP@"] => {m} _ {p} ]; # IRREALIS PREFIX
      define NVowelRestr1 [ ["@NVowel@"] => {n} _ [{p}|{py}|{t}|{ty}|{k}|{ky}|{s}|{sh}|{ch}|{ts}|{tz}|{h}|{m}|{n}|{ny}|{r}|{ry}|{v}|{y}] ]; ! n, p should be omitted ? # IRREALIS PREFIX
      define PersPrefixRestr1 [ Cons => .#. ~[[{h}|{n}|{p}|{r}]"@VPERS@"] _ ];
      define PersPrefixRestr2 [ [{o}] => .#. ~[[{pi}]"@VPERS@"] _ ]; 
      define AgentiveCausativeRestr1 [ [{o}]"@AGTCAUS@" => .#. ~[[{n}]"@VPERS@"] _ ]; # no examples available, but it causes a lot of overgeneration that's why it should be regulated  
      # Epenthesis rules 
      define EpenthesisRestr1 ~[ ?* [{t}|{v}]"@EP@"[{t}] ?* ];
      define EpenthesisRestr2 ~[ ?* "@EP@"[{a}]"@EP"[{aa}] ?* ];
      
      define VerbFeatRestr [ MPRestr1 .o. NVowelRestr1 .o. PersPrefixRestr1 .o. PersPrefixRestr2 .o. AgentiveCausativeRestr1 .o. 
 EpenthesisRestr1 .o. EpenthesisRestr2 ] ; 

      #source vroot.prq.foma
      #source vroot.redup.foma
      #source vroot.es.foma
      #source n-vroot.prq.group1.foma 
      define vsyllable ConsRoot* VowelRoot^{1,2} ConsRoot*;
        define VRootPRQ [ ["[="] :0 ] [ vsyllable+ ] [ ["+GUESS][VRoot]"] :0 ] ;

      ##########################
      #                        #
      #          Nouns         #
      #                        #
      ##########################
      source n-p-1.foma
      define NPref [(N=P=1)] ;

      source noun.suffix.prq.script
      source noun.transitions.prq.script

      define NSuff [ N ]; #(N=S=1) (N=S=2) (N=S=3)] ;

      ###################################
      #          Lenition Rules         #
      ###################################

      define PWLenitionRule1 [ "@PHONPROC@"p (->) "@PHONPROC@"v || [{o}] _ [{i}|{a}|{o}] ]; 
                                                                            # nopito (in our lexicon) -> no@PHONPROC@pito -> no@PHONPROC@vito -> novito 
                                                                            # nopochokine (in our lexicon) -> no@PHONPROC@pochokine -> no@PHONPROC@bochokine -> nobochokine 
      define PWLenitionRule2 [ "@PHONPROC@"p (->) "@PHONPROC@"v || [{i}] _ [{e}|{i}|{a}|{o}] ]; 
                                                                            # ipentaki (in our lexicon) -> i@PHONPROC@pentaki -> i@PHONPROC@ventaki -> iventaki 
                                                                            # ipanko (in our lexicon) -> i@PHONPROC@panko -> i@PHONPROC@vanko -> ivanko 
                                                                            # pipompooti (in our lexicon) -> pi@PHONPROC@pompooti -> pi@PHONPROC@vompooti -> pivompooti 
      define PWLenitionRule3 [ "@PHONPROC@"p (->) "@PHONPROC@"v || [{a}] _ [{a}|{i}|{o}] ]; 
                                                                            # apankopaye 
                                                                            # apinkatsarite (in our lexicon) -> a@PHONPROC@pinkatsarite -> a@PHONPROC@vinkatsarite -> avinkatsarite 
                                                                            # COMPOUNDS vatsapori (in our lexicon) -> vatsa@PHONPROC@pori -> vatsa@PHONPROC@vori -> vatsavori
                                                                            # aporoni 
      define PWLenitionRule4 [ "@PHONPROC@"p (->) "@PHONPROC@"v || [{e}] _ [{i}|{o}|{a}] ]; 
      
      define PWLenitionRule5 [ "@PHONPROC@"p (->) "@PHONPROC@"v || [{pi}] _ [{i}] ]; 
      
      define PYLenitionRule1 [ "@PHONPROC@"k (->) "@PHONPROC@"y || [{pi}] _ [{a}] ]; 
                                                                            # piyatsarekitsoki
      
      define PLenitionRule1 [ "@PHONPROC@"p (->) "@PHONPROC@" || [{no}] _ [{a}] ]; 
                                                                            # noajoni 
      define PLenitionRule2 [ "@PHONPROC@"p (->) "@PHONPROC@" || .#. [{o}] _ [{a}] ]; 
                                                                            # oarentite 
      
      define KJLenitionRule1 [ "@PHONPROC@"k (->) "@PHONPROC@"y || _ [{o}|{a}|{e}|{i}] ]; 
      define KJLenitionRule2 [ "@PHONPROC@"c (->) "@PHONPROC@"y || _ [{o}|{a}|{e}|{i}] ]; 
                                                                            # optional rule: noyokani, ikentsike  
                                                                            # nokimini (in our lexicon) -> no@PHONPROC@kimini -> no@PHONPROC@yimini -> noyimini
      define KLenitionRule2 [ "@PHONPROC@"k (->) "@PHONPROC@" || [{o}] _ [{i}|{e}|{a}|{o}] ]; 
                                                                            # nokitzi (in our lexicon) -> no@PHONPROC@kitzi -> no@PHONPROC@itzi -> noitzi
                                                                            # nokanire (in our lexicon) -> no@PHONPROC@kanire -> no@PHONPROC@anire -> noanire
                                                                            # nokonta (in our lexicon) -> no@PHONPROC@onta -> no@PHONPROC@onta -> noonta 
                                                                            # okomaro (in our lexicon) -> o@PHONPROC@omaro -> o@PHONPROC@omaro -> oomaro-janiqui
                                                                            # oketsa (in our lexicon) -> o@PHONPROC@etsa -> o@PHONPROC@etsa -> o-etsa-re-ki
      define KLenitionRule3 [ "@PHONPROC@"k (->) "@PHONPROC@" || [{i}] _ [{i}|{o}] ]; ! not working.. why??? 
                                                                            # ikishi (in our lexicon) -> i@PHONPROC@kishi -> i@PHONPROC@ishi -> iishi 
                                                                            # ikitsoki (in our lexicon) -> i@PHONPROC@kitsoki -> i@PHONPROC@itsoki -> iitsoki 
                                                                            # iovintsaane 
      define KLenitionRule4 [ "@PHONPROC@"k (->) "@PHONPROC@" || [{p}] _ [{i}] ]; 
                                                                            # pkitsare (in our lexicon) -> p@PHONPROC@kitsare -> p@PHONPROC@itsare -> pitsare 
      define KLenitionRule5 [ "@PHONPROC@"k (->) "@PHONPROC@" || [{o}] _ [{i}] ]; ! oitsoki -> o=kitsoki 
      define KLenitionRule6 [ "@PHONPROC@"k (->) "@PHONPROC@" || [{a}] _ [{i}] ]; ! aitsoki -> a=kitsoki 

      define Lenition [ PWLenitionRule1 .o. PWLenitionRule2 .o. PWLenitionRule3 .o. PWLenitionRule4 
 .o. PYLenitionRule1 
 .o. PLenitionRule1 .o.  PLenitionRule2  
 .o. KJLenitionRule1 .o. KJLenitionRule2 
 .o. KLenitionRule2 
 .o. KLenitionRule3 
 .o. KLenitionRule4 
 .o. KLenitionRule5 
 .o. KLenitionRule6 
];

      #########################################
      #          Vowel Deletion Rules         #
      #########################################

      define VowelLossRule3 [ i"@PHONPROC@" (->) "@PHONPROC@" || _ [{i}] ]; 
      define VowelLossRule4 [ o"@PHONPROC@" (->) "@PHONPROC@" || _ [{o}] ]; 
      
      define VowelLoss [ VowelLossRule3 .o. VowelLossRule4 ];
      
      ####################################
      #                                  #
      #          Noun                    #
      #     Restricctions                #
      #                                  #
      ####################################
      define PossPlusInalRestr1 [~$["@PHONPROC@"?*"@NPOSS"]]; ! it is possible that this is a badly designed rule 
      define PossPlusAlnPossRestr1 [ ["@ALNPOSS@"] => ?*"@PHONPROC@"?* _ ?* ]; ! an aln.poss suffix should only appear in case there is a possessive prefix 
      
      define PossessiveRestr1 [ Cons => .#. ~[[{r}|{n}|{p}]"@PHONPROC@"] _  ];
      define PossessiveRestr2 [ Cons => .#. ~[{ir}"@PHONPROC@"] _  ];
      
      define PossessiveRestr3 [ Vowels => .#. ~[{no}"@PHONPROC@"] _  ]; ! noito ??? oitontsi ??? 
      define PossessiveRestr4 [ [{o}] => .#. ~[{pi}"@PHONPROC@"] _  ]; ! pio 
      
      define IRestr1 [ ["@I@"] => {i} _ ]; 
      define IRestr2 [ ["@IDIM@"] => {i} _ , {e} _ ]; ! eẽtxeriki FROM CPB 
      define NIRestr1 [ ["@NI@"] => {ni} _ ]; 
      
      define NominalizerRestr1 ~[ ?* [{k}]"@EP"[{ri}] ?* ];
      
      define NounFeatRestr [ PossPlusInalRestr1 .o. PossessiveRestr1 .o. PossessiveRestr2 .o. PossessiveRestr4 
.o. IRestr1 .o. IRestr2 
.o. NIRestr1 .o. PossPlusAlnPossRestr1 
.o. NominalizerRestr1 ];
      
      #source nroot.prq.foma
      #source aroot.prq.foma
      # Spanish loan words
      #source nroot.es.foma
      # English loan words
      #source nroot.en.foma
      # Quechua loan words 
      #source nroot.qu.foma
      # Portuguese loan words
      #source nroot.pt.foma
      #source numeral.prq.foma

      # Compound nouns
      #source noun.cmp.prq.foma
      define NRootCmpPRQ NRootCmpPRQin;

#      source nroot.es.freeling.00.foma
#      define NRootESFreeling00 NRootESFreelingin00 .o. UpperCase; 
#      source nroot.es.freeling.01.foma
#      define NRootESFreeling01 NRootESFreelingin01 .o. UpperCase; 
#      source nroot.es.freeling.02.foma
#      define NRootESFreeling02 NRootESFreelingin02 .o. UpperCase; 
#      source nroot.es.freeling.03.foma
#      define NRootESFreeling03 NRootESFreelingin03 .o. UpperCase; 
      
      #source place.names.foma 

#      define NRootFreeling [NRootESFreeling00|NRootESFreeling01|NRootESFreeling02|NRootESFreeling03];
      
      define nsyllable ConsRoot* VowelRoot^{1,2} ConsRoot*;
      define NRootPRQ [ ["[="] :0 ] [ vsyllable+ ] [ ["+GUESS][NRoot]"] :0 ] ;

      ####################################
      #     Compound nouns               #
      ####################################
      # the lenition process is found at the root-root boundary in noun compounds 
      # vatsavori / 'vatsa-pori' / 'meat-muscle' 
      # caavovaniri~kaavovaniri / 'kaavo-kaniri' / ES: 'caña-yuca', EN: 'sugar.cane-yucca' 
      # camatoyaniri / '' 
      # tsireentsiyaniri / '' 
      # carapavanco / '' 
      define PWLenitionRuleCmpNoun1 [ "@PHONPROCCMPNOUN@"p (->) "@PHONPROCCMPNOUN@"v || [{a}] _ [{a}|{i}|{o}] ]; 
      define KWLenitionRuleCmpNoun2 [ "@PHONPROCCMPNOUN@"k (->) "@PHONPROCCMPNOUN@"v || [{a}|{o}] _ [{a}] ]; 
      define KYLenitionRuleCmpNoun3 [ "@PHONPROCCMPNOUN@"k (->) "@PHONPROCCMPNOUN@"y || [{e}|{i}|{o}] _ [{a}] ]; 
      define KGLenitionRuleCmpNoun4 [ "@PHONPROCCMPNOUN@"k (->) "@PHONPROCCMPNOUN@"g || [{a}] _ [{a}] ]; 
      
      define LenitionCmpNoun [ PWLenitionRuleCmpNoun1 .o. KWLenitionRuleCmpNoun2 .o. KYLenitionRuleCmpNoun3 .o. KGLenitionRuleCmpNoun4 ];  

      ############################
      #      Noun transducer     #
      ############################
      define Noun [ (NPref) [NRootPRQ] ("@PHONPROCCMPNOUN@"NRootCmpPRQ) (NSuff) ] .o. Lenition .o. VowelLoss .o. LenitionCmpNoun .o. NounFeatRestr ; #.o. VowelLoss ;
      
      ##########################
      #                        #
      #   Nominalized verb     #
      #                        #
      ##########################
      # Nominalized verbs 
      define NPOSSRestr1 [ ["@NPOSS"[{ntsi}|{ntzi}|{nti}|{nchi}]] => ["@EP"[{ro}|{vo}|{re}|{ri}]"@NMZ@"] _ ]; 
      define NPOSSRestr2 [ ["@NPOSS"[{tsi}|{tzi}]] => ["@EP"[{mento}|{minto}]"@NMZ@"] _ ];

      define NominalizedVerbFeatRestr [ NPOSSRestr1 .o. NPOSSRestr2 ];

      define PWLenitionRuleIncNoun1 [ "@EP"p (->) "@PHONPROCINCNOUN@"v || [{a}] _ [{a}|{o}] ]; 
      define LenitionIncNoun [ PWLenitionRuleIncNoun1 ];  

      define NominalizedVerb [ (NPref) [VRootPRQ] ( [
                                                     [APPLINT DUR] 
                                                   | [APPLGEN] # tseeyakotaantsi / =tsee -ako -t -aantsi / =to.lie -applgen -ep -ing / ES: 'difamar'; EN: 'to.defame; to.slander'  
                                                   | [APPLBEN] 
                                                   | [APPLSEP] # aapitsataantsi / =a-apitsa-t-aantsi ES: 'sustracción', EN: 'rest'
                                                   | [DLMT] # i-tsipa-bintsa-ri-te  
                                                   | [RCP CAUSSOC] # nashitavakaantsi / =nashi -t -aV -ak -aantsi / =to.separate -ep -rcp -caus.soc -inf / EN: 'to.get.divorced' 
                                                                 # ohokavakaaja / o- =hok -av -ak -a -ah -a / 3n.m.s- =to.leave -rcp -caus.soc -ep -regr -real / EN: 'they.got.separated', ES: 'se.han.separado (pareja)'  
                                                   | [REV] # =pai-ry-aantsi 'to.say.someone's.name'
                                                   | [FRUS] # 
                                                   | [AUG] # ipiroaantsi / =ir -piro -aantsi / =to.drink -degr -inf / EN: 'to.drink.well'
                                                   | [SENSORY] # kisanintantzinkari / =kis -a -nint -antzinkari 
                                                   | [APPLREAS] # añaantarentsi 
                                                   | [DUR] # ñaabaementotsiki  
                                                   | [APPLPRES] # shiyakaimotantsi, abishimotantsi, timimotantsi, onimotantsi? 
                                                  ] )
                                                  # konatsapiyarentsi / =kona -tsapiya -re -ntsi / =to.fish.with.barbasco -cl:side.of.river -nmz -nposs / EN: 'activity.of.fishing.with.barbasco.at.the.bank.of.the.river', ES: 'pesca.nocturna.con.barbasco.a.orillas.del.río'  
                                                  # CL: these are verbal classifiers !!
                                                  [ [ 
                                                    CL 
                                                  | [ "@PHONPROCINCNOUN@"[V=S=LEN=noun] [NMZ|ADJ] ] # sankenabankori 
                                                  | [ CL [NMZ|ADJ] ] 
                                                  | [ NMZ|ADJ ] 
                                                                    ] (NRootCmpPRQ) ] # yotaantsipanko 
                                                  (NSuff) ] .o. Lenition .o. NounFeatRestr .o. NominalizedVerbFeatRestr .o. Epenthesis .o. LenitionIncNoun ; # .o. VowelLoss ;
      
      define NominalizedVerbPoss [ NPref [VRootPRQ] (SENSORY) POSSIND ] .o. Lenition .o. NounFeatRestr .o. NominalizedVerbFeatRestr .o. Epenthesis ;

      define CompositeVerbRoot [ (V=S=noun) ("@PHONPROCCMPNOUN@"V=S=LEN=noun) [[(N=S=CL)]|[(N=S=ABS)]] ] ;
      
      ############################
      #      Verb transducer     #
      ############################
      define Verb [ [ [ (Pref) [VRootPRQ] ] | [VRootREDUPin] ] Suff ] .o. IrrealisMidVoiceEmpaRule1 .o. CausativeAgentive .o. Epenthesis .o. LenitionIncNoun .o. VerbFeatRestr;
      #define Verb [ (Pref) [VRootPRQ] (Suff) ] .o. CausativeAgentive .o. Lenition .o. VerbFeatRestr;
      
      ##########################
      #                        #
      #         Adverb         #
      #                        #
      ##########################
      source advroot.prq.foma
        define AdvRootPRQ AdvRootPRQin;
      define Adverb [ [AdvRootPRQ] ];

      ##########################
      #                        #
      #          Other         #
      #                        #
      ##########################
      source oroot.prq.foma
        define ORootPRQ ORootPRQin;

      define Other [ [ORootPRQ] ];

      define ConnRootPRQ01 [ [ConnRootPRQ01in] [(V=S=OPT)] ];

      ##########################
      #                        #
      #        Negator         #
      #                        #
      ##########################
      source neg.prq.foma
        define NegPRQ NegPRQin;
      define Negator [ [NegPRQ] ];

      ##########################
      #                        #
      # Interrogative Pronoun  #
      #                        #
      ##########################
      source interrogative.prq.foma
        define WhPRQ WhPRQin;
      define Interrogative [ [WhPRQ] ];

      ##########################
      #                        #
      #    Personal Pronoun    #
      #                        #
      ##########################
      
      # irirove! / =iriro -ve / =iriro+cont.d.top. -ve / =he -excl  
      # irooritya / =iroori -tya / =iroori+cntr.add.l.+foc. -tya / =she -emph  
      # naakamaja / naakamaha / =naaka -maha / 
      source prnpers.prq.foma
        define PrnPersPRQ PrnPersPRQin;
      define Personal [ [PrnPersPRQ] [(N=S=EMPH)|(N=S=PL)|(V=S=COND)|(V=S=EXCL)|(N=S=CNTR)|(V=S=DUB)] ];

      #################################
      #                               #
      #    Free Possessive Pronoun    #
      #                               #
      #################################
      source prnposs.prq.foma
        define PrnPossPRQ PrnPossPRQin;
      define Possessive [ [PrnPossPRQ] ];

      ###############################
      #                             #
      #    Demonstrative Pronoun    #
      #                             #
      ###############################

      # akave! / =aka -ve / =aka+proximal.b. -ve / =here -excl / ES: 'aquí'  
      # jantave / hantave / =hanta+distal.b. -ve / =there -excl / ES: 'allí'  
      # irokave / =iroka+n.m.+proximal.b. -ve / =this -excl /  
      # yorave / =yora+m.+medial -ve / =DEM -excl /  
      # orave / =ora+n.m.+medial -ve / =that -excl /  
      # irorave / =irora+n.m.+medial.b. -ve / =that -excl 
      # iyorave / =iyora+m.+medial -ve / =that -excl 
      # irokamaja / irokamaha / =iroka+n.m.+proximal.b. maha / =this -contr
      # okame / =oka+n.m.+proximal -me / =this -cnt.f 
      # yokame / =yoka+m.+proximal -me / =this -cnt.f 
      source prndem.prq.foma
        define PrnDemPRQ PrnDemPRQin;
      define Demonstrative [ [PrnDemPRQ] ([N=S=PL|V=S=EXCL|N=S=CNTR|V=S=CNTF|N=S=SUPERL]) ];

      ##########################
      #                        #
      #       Interjection     #
      #                        #
      ##########################
      source interjection.prq.foma
        define InterjPRQ InterjPRQin;
      define Interjection [ [InterjPRQ] ];

      ##########################
      #                        #
      #       Ideophones       #
      #                        #
      ##########################
      source ideo.prq.foma
      source ideo.adbl.foma
        define IdeoPRQ IdeoPRQin;
        define IdeoADBL IdeoADBLin;
      define Ideophone [ [IdeoPRQ|IdeoADBL] ];

      source ideoredupsyl.prq.foma

      define IdeoRedupSyl [ [ 
                     IdeoRedupSylin=RI RedupSyl=RI 
                   | IdeoRedupSylin=RE RedupSyl=RE 
                   | IdeoRedupSylin=PO RedupSyl=PO 
                   | IdeoRedupSylin=MI RedupSyl=MI 
                   | IdeoRedupSylin=PI RedupSyl=PI 
                   | IdeoRedupSylin=RA RedupSyl=RA 
                   | IdeoRedupSylin=VI RedupSyl=VI 
                   | IdeoRedupSylin=RO RedupSyl=RO 
                   | IdeoRedupSylin=NI RedupSyl=NI 
                   ] (IDEO=S=PUNCTUALACTN) ] ; 

      ##########################
      #                        #
      #       Punctuation      #
      #                        #
      ##########################
      source punctuation.foma
        define PunctuationMarks Punctuation;
      define Ashaninka Cleanup2 .o. [ [Other|Adverb|Noun|Verb|Negator|Interrogative|Personal|Possessive|Demonstrative|Interjection|Ideophone|IdeoRedupSyl|NominalizedVerb|NominalizedVerbPoss|ConnRootPRQ01|PunctuationMarks] ] .o. Cleanup1 
.o. Orthography .o. UpperCase #NORMAL #DISABLE FOR SPELL-CHECKING DETECTION 
;
      #NORMAL
      read regex Ashaninka; 
      #NORMAL
      save stack asheninka.guesser.bin 

# SPELLING SUGGESTION 
#read regex Ashaninka .l; # Projection 
#write att spellcheck.att 
#clear 
#read att spellcheck.att 
#read cmatrix typo.matrix 
#save stack error_correction.fst 
